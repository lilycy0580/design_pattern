工厂方法模式：
    定义一个抽象化工厂的接口,让子类决定实例化哪个类  将类的实例化延迟到其子类

    抽象产品类
    具体产品类1
    具体产品类2

    抽象工厂类
    具体工厂类

    场景类

优点：
    创建对象时只需知道类名即可,不需要知晓整个创建过程,降低模块间耦合
    扩展性较好,增加产品类只需修改具体的工厂类或者扩展一个工厂类即可
    解耦框架,高层模块只需知道产品的抽象类即可,不关心其他实现类

缺点：

使用场景：
    所有需要生成对象的地方均可使用,但是需要慎重考虑是否增加一个工厂类进行管理,增加代码复杂度

扩展：
    简单工厂模式：
        一个模块只需要一个工厂类,使用static修饰方法,不需要抽象工厂类,